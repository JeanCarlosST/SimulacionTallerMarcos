<div class="modal fade show" role="dialog" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <span class="fs-4 fw-bold">Tabla de Resultados</span>
                <button type="button" class="btn-close" @onclick="() => Cerrar(false)" data-bs-dismiss="modal" aria-label="Close"/>
            </div>
            <div class="modal-body">
                 <div class="input-group my-1">
                    <span class="input-group-text">Cantidad de carpinteros</span>
                    <input type="number" class="form-control text-center" min="5" @bind-value="CantCarpinteros"/>
                </div>
                <div class="input-group my-1">
                    <span class="input-group-text">Tiempo min. llegada entre grupos</span>
                    <input type="number" class="form-control text-center" min="1" @bind-value="MinTiempoLlegada"/>
                    <span class="input-group-text">Tiempo max. llegada entre grupos</span>
                    <input type="number" class="form-control text-center" min="1" @bind-value="MaxTiempoLlegada"/>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" @onclick="Configuracion.EstablecerConfiguracion">
                    Reestablecer configuración
                </button>
                <button type="button" class="btn btn-success" @onclick="GuardarConfiguracion">
                    Guardar cambios
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    public static int MinTiempoLlegada { get; set; } = Configuracion.MinTiempoLlegada;
    public static int MaxTiempoLlegada { get; set; } = Configuracion.MaxTiempoLlegada;

    public int CantCarpinteros { get; set; } = Configuracion.CantCarpinteros;

    private Task Cerrar(bool refrescar)
    {
        return OnClose.InvokeAsync(refrescar);
    }

    private void GuardarConfiguracion()
    {
        Configuracion.CantCarpinteros = CantCarpinteros;
        Configuracion.MinTiempoLlegada = MinTiempoLlegada;
        Configuracion.MaxTiempoLlegada = MaxTiempoLlegada;
        
        Cerrar(true);
    }
}
